services:
  rabbitmq:
    image: rabbitmq:4-management-alpine
    ports:
      - "5672:5672"
      - "15672:15672"
  smp-postgres:
    image: postgres
    restart: always
    environment:
      - POSTGRES_PASSWORD=password
      - POSTGRES_USER=postgres
      - POSTGRES_DB=users
    ports:
      - "5432:5432"
    volumes:
      - smp_data:/var/lib/postgresql/data
  #  pgadmin:
  #    container_name: pgadmin_container
  #    image: dpage/pgadmin4
  #    depends_on:
  #      - smp-postgres
  #    environment:
  #      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin@example.com}
  #      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
  #      PGADMIN_CONFIG_SERVER_MODE: 'False'
  #    volumes:
  #      - ./pgadmin:/var/lib/pgadmin
  #    ports:
  #      - ${PGADMIN_PORT:-5050}:80
  #    restart: unless-stopped
  gateway-service:
    environment:
      - ASPNETCORE_URLS=http://+:80
      - ASPNETCORE_ENVIRONMENT=Docker
    build:
      context: ../.
      dockerfile: ./src/GatewayService/Dockerfile
    image: gateway-service
    ports:
      - "5098:80"
    container_name: gateway
  auth-service:
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - RabbitMq__Host=rabbitmq
      - ConnectionStrings__PostgresConnection=Server=smp-postgres:5432;User Id=postgres;Password=password;Database=users
    build:
      context: ../.
      dockerfile: ./src/AuthorizationService/Dockerfile
    image: auth-service
    container_name: auth-service
    ports:
      - "5171:80"
    depends_on:
      - smp-postgres
      - rabbitmq
  profile-service:
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - RabbitMq__Host=rabbitmq
      - AWS__AccessKey=${AWS_ACCESS_KEY_ID}
      - AWS__SecretKey=${AWS_SECRET_ACCESS_KEY}
      - ConnectionStrings__PostgresConnection=Server=smp-postgres:5432;User Id=postgres;Password=password;Database=profiles
    build:
      context: ../.
      dockerfile: ./src/ProfileService/Dockerfile
    image: profile-service
    container_name: profile-service
    ports:
      - "5172:80"
    depends_on:
      - rabbitmq
      - smp-postgres
  messaging-service:
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - ConnectionStrings__PostgresConnection=Server=smp-postgres:5432;User Id=postgres;Password=password;Database=chats
    build:
      context: ../.
      dockerfile: ./src/MessagingService/Dockerfile
    image: messaging-service
    container_name: messaging-service
    ports:
      - "5173:80"
    depends_on:
      - smp-postgres
  stories-service:
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - JWT__SecretKey=${JWT_SECRET_KEY}
      - JWT__ExpiryDays=${JWT_EXPIRY_DAYS}
      - ConnectionStrings__PostgresConnection=Server=smp-postgres:5432;User Id=postgres;Password=password;Database=stories
    build:
      context: ../.
      dockerfile: ./src/StoriesService/Dockerfile
    image: stories-service
    container_name: stories-service
    ports:
      - "5174:80"
    depends_on:
      - smp-postgres


volumes:
  smp_data: